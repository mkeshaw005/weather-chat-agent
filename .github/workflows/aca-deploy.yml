name: Build, Push to ACR and Deploy to Azure Container Apps

on:
  push:
    branches: [ main ]
    paths:
      - "app/**"
      - "requirements.txt"
      - "Dockerfile"
      - ".github/workflows/aca-deploy.yml"
  workflow_dispatch:

permissions:
  id-token: write   # for OIDC
  contents: read

env:
  IMAGE_NAME: azure-chat-demo
  RESOURCE_GROUP: ${{ vars.AZ_RESOURCE_GROUP }}
  CONTAINER_APP_NAME: ${{ vars.AZ_CONTAINER_APP_NAME }}
  ACR_NAME: ${{ vars.AZ_ACR_NAME }}
  # Optional: set this to override
  ACR_LOGIN_SERVER: ${{ vars.AZ_ACR_LOGIN_SERVER }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Resolve ACR login server
        id: acr
        shell: bash
        run: |
          if [ -z "${ACR_LOGIN_SERVER}" ]; then
            ACR_LOGIN_SERVER=$(az acr show -n "$ACR_NAME" --query loginServer -o tsv)
            echo "ACR_LOGIN_SERVER=$ACR_LOGIN_SERVER" >> $GITHUB_ENV
          else
            echo "ACR_LOGIN_SERVER=$ACR_LOGIN_SERVER" >> $GITHUB_ENV
          fi
          echo "Resolved ACR login server: $ACR_LOGIN_SERVER"

      - name: Set up QEMU (for cross-platform builds)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Acquire ACR access token and login to ACR
        id: acrlogin
        shell: bash
        run: |
          TOKEN=$(az acr login --name "$ACR_NAME" --expose-token --query accessToken -o tsv)
          echo "$TOKEN" | docker login "$ACR_LOGIN_SERVER" -u 00000000-0000-0000-0000-000000000000 --password-stdin

      - name: Build and push image (linux/amd64)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: |
            ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest

      - name: Update Azure Container App to new image
        shell: bash
        run: |
          az containerapp update \
            -g "$RESOURCE_GROUP" \
            -n "$CONTAINER_APP_NAME" \
            --image "${ACR_LOGIN_SERVER}/${IMAGE_NAME}:${GITHUB_SHA}"

      - name: Show app FQDN
        shell: bash
        run: |
          FQDN=$(az containerapp show -g "$RESOURCE_GROUP" -n "$CONTAINER_APP_NAME" --query properties.configuration.ingress.fqdn -o tsv)
          echo "App URL: https://$FQDN"
